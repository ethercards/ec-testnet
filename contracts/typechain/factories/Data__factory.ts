/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Data, DataInterface } from "../Data";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "data",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_tokenId",
        type: "uint16",
      },
    ],
    name: "getValue",
    outputs: [
      {
        internalType: "uint8[]",
        name: "",
        type: "uint8[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_tokenId",
        type: "uint16",
      },
      {
        internalType: "uint8[]",
        name: "_value",
        type: "uint8[]",
      },
    ],
    name: "setValue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040518060a00160405280600160ff168152602001600260ff168152602001600360ff168152602001600460ff168152602001600560ff16815250600080600a61ffff1681526020019081526020016000209060056100719291906100d8565b506040518060a00160405280600660ff168152602001600760ff168152602001600860ff168152602001600960ff168152602001600a60ff16815250600080600e61ffff1681526020019081526020016000209060056100d29291906100d8565b5061019c565b82805482825590600052602060002090601f0160209004810192821561016e5791602002820160005b8382111561013f57835183826101000a81548160ff021916908360ff1602179055509260200192600101602081600001049283019260010302610101565b801561016c5782816101000a81549060ff021916905560010160208160000104928301926001030261013f565b505b50905061017b919061017f565b5090565b5b80821115610198576000816000905550600101610180565b5090565b610618806101ab6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806326742cdf14610046578063384f4a131461007657806341720798146100a6575b600080fd5b610060600480360381019061005b91906103d3565b6100c2565b60405161006d91906104c5565b60405180910390f35b610090600480360381019061008b9190610356565b610105565b60405161009d91906104a3565b60405180910390f35b6100c060048036038101906100bb919061037f565b61019d565b005b600060205281600052604060002081815481106100de57600080fd5b9060005260206000209060209182820401919006915091509054906101000a900460ff1681565b60606000808361ffff1661ffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561019157602002820191906000526020600020906000905b82829054906101000a900460ff1660ff168152602001906001019060208260000104928301926001038202915080841161015a5790505b50505050509050919050565b806000808461ffff1661ffff16815260200190815260200160002090805190602001906101cb9291906101d0565b505050565b82805482825590600052602060002090601f016020900481019282156102665791602002820160005b8382111561023757835183826101000a81548160ff021916908360ff16021790555092602001926001016020816000010492830192600103026101f9565b80156102645782816101000a81549060ff0219169055600101602081600001049283019260010302610237565b505b5090506102739190610277565b5090565b5b80821115610290576000816000905550600101610278565b5090565b600082601f8301126102a557600080fd5b81356102b86102b382610511565b6104e0565b915081818352602084019350602081019050838560208402820111156102dd57600080fd5b60005b8381101561030d57816102f38882610341565b8452602084019350602083019250506001810190506102e0565b5050505092915050565b6000813590506103268161059d565b92915050565b60008135905061033b816105b4565b92915050565b600081359050610350816105cb565b92915050565b60006020828403121561036857600080fd5b600061037684828501610317565b91505092915050565b6000806040838503121561039257600080fd5b60006103a085828601610317565b925050602083013567ffffffffffffffff8111156103bd57600080fd5b6103c985828601610294565b9150509250929050565b600080604083850312156103e657600080fd5b60006103f485828601610317565b92505060206104058582860161032c565b9150509250929050565b600061041b8383610485565b60208301905092915050565b60006104328261054d565b61043c8185610565565b93506104478361053d565b8060005b8381101561047857815161045f888261040f565b975061046a83610558565b92505060018101905061044b565b5085935050505092915050565b61048e8161058e565b82525050565b61049d8161058e565b82525050565b600060208201905081810360008301526104bd8184610427565b905092915050565b60006020820190506104da6000830184610494565b92915050565b6000604051905081810181811067ffffffffffffffff821117156105075761050661059b565b5b8060405250919050565b600067ffffffffffffffff82111561052c5761052b61059b565b5b602082029050602081019050919050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600061ffff82169050919050565b6000819050919050565b600060ff82169050919050565bfe5b6105a681610576565b81146105b157600080fd5b50565b6105bd81610584565b81146105c857600080fd5b50565b6105d48161058e565b81146105df57600080fd5b5056fea26469706673582212204a0f62367c1da9c1079932cc31d2463d24891838b8926e64501bc9ac325e6b4a64736f6c63430007050033";

export class Data__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Data> {
    return super.deploy(overrides || {}) as Promise<Data>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Data {
    return super.attach(address) as Data;
  }
  connect(signer: Signer): Data__factory {
    return super.connect(signer) as Data__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DataInterface {
    return new utils.Interface(_abi) as DataInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Data {
    return new Contract(address, _abi, signerOrProvider) as Data;
  }
}
