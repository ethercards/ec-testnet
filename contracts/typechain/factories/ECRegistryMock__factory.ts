/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ECRegistryMock,
  ECRegistryMockInterface,
} from "../ECRegistryMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "access",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "traitId",
        type: "uint16",
      },
    ],
    name: "addressCanModifyTrait",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
      {
        internalType: "uint16[]",
        name: "traitIds",
        type: "uint16[]",
      },
    ],
    name: "addressCanModifyTraits",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "traitID",
        type: "uint16",
      },
    ],
    name: "getImplementer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "traitID",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "tokenID",
        type: "uint16",
      },
    ],
    name: "hasTrait",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    name: "implementer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "traitId",
        type: "uint16",
      },
      {
        internalType: "bool",
        name: "mode",
        type: "bool",
      },
    ],
    name: "setAddressAccess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "traitID",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "setImplementer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "traitID",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "tokenID",
        type: "uint16",
      },
      {
        internalType: "bool",
        name: "mode",
        type: "bool",
      },
    ],
    name: "setTrait",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16[]",
        name: "traitIDs",
        type: "uint16[]",
      },
      {
        internalType: "uint16[]",
        name: "tokenIDs",
        type: "uint16[]",
      },
      {
        internalType: "bool[]",
        name: "modes",
        type: "bool[]",
      },
    ],
    name: "setTraitOnMultiple",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    name: "traits",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610aaa806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80638a00ed5e116100715780638a00ed5e1461049c5780638a1ba2c4146104ee578063b6489c6f1461054c578063c868d832146105a2578063c9e317d61461060a578063ecff11b614610660576100a9565b806301db4469146100ae578063201b1cc81461010a5780633eac79471461017257806349394adb14610352578063811cffbd146103ae575b600080fd5b6100de600480360360208110156100c457600080fd5b81019080803561ffff1690602001909291905050506106ac565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61015a6004803603604081101561012057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803561ffff1690602001909291905050506106f0565b60405180821515815260200191505060405180910390f35b6103506004803603606081101561018857600080fd5b81019080803590602001906401000000008111156101a557600080fd5b8201836020820111156101b757600080fd5b803590602001918460208302840111640100000000831117156101d957600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561023957600080fd5b82018360208201111561024b57600080fd5b8035906020019184602083028401116401000000008311171561026d57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156102cd57600080fd5b8201836020820111156102df57600080fd5b8035906020019184602083028401116401000000008311171561030157600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050509192919290505050610760565b005b6103826004803603602081101561036857600080fd5b81019080803561ffff169060200190929190505050610814565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610484600480360360408110156103c457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561040157600080fd5b82018360208201111561041357600080fd5b8035906020019184602083028401116401000000008311171561043557600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050509192919290505050610847565b60405180821515815260200191505060405180910390f35b6104ec600480360360408110156104b257600080fd5b81019080803561ffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108a7565b005b61054a6004803603606081101561050457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803561ffff169060200190929190803515159060200190929190505050610904565b005b61058a6004803603604081101561056257600080fd5b81019080803561ffff169060200190929190803561ffff169060200190929190505050610979565b60405180821515815260200191505060405180910390f35b6105f2600480360360408110156105b857600080fd5b81019080803561ffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109a8565b60405180821515815260200191505060405180910390f35b6106486004803603604081101561062057600080fd5b81019080803561ffff169060200190929190803561ffff1690602001909291905050506109d7565b60405180821515815260200191505060405180910390f35b6106aa6004803603606081101561067657600080fd5b81019080803561ffff169060200190929190803561ffff169060200190929190803515159060200190929190505050610a23565b005b60008060008361ffff1661ffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000600160008361ffff1661ffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60005b83518161ffff16101561080e57818161ffff168151811061078057fe5b602002602001015160026000868461ffff168151811061079c57fe5b602002602001015161ffff1661ffff1681526020019081526020016000206000858461ffff16815181106107cc57fe5b602002602001015161ffff1661ffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508080600101915050610763565b50505050565b60006020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806001905060005b83518161ffff16101561089b5761087f85858361ffff168151811061087257fe5b60200260200101516106f0565b61088e576000925050506108a1565b8080600101915050610851565b50809150505b92915050565b806000808461ffff1661ffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b80600160008461ffff1661ffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505050565b60026020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b60016020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b6000600260008461ffff1661ffff16815260200190815260200160002060008361ffff1661ffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b80600260008561ffff1661ffff16815260200190815260200160002060008461ffff1661ffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050505056fea2646970667358221220ce0a5ade11cd6b037426a5a1f5e65a529d8b4ec040e23e826e1ea24aab1a75ee64736f6c63430007050033";

export class ECRegistryMock__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ECRegistryMock> {
    return super.deploy(overrides || {}) as Promise<ECRegistryMock>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ECRegistryMock {
    return super.attach(address) as ECRegistryMock;
  }
  connect(signer: Signer): ECRegistryMock__factory {
    return super.connect(signer) as ECRegistryMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ECRegistryMockInterface {
    return new utils.Interface(_abi) as ECRegistryMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ECRegistryMock {
    return new Contract(address, _abi, signerOrProvider) as ECRegistryMock;
  }
}
