/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AccidentalCollaborationMock,
  AccidentalCollaborationMockInterface,
} from "../AccidentalCollaborationMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "_traitId",
        type: "uint16",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint16",
        name: "_tokenId",
        type: "uint16",
      },
      {
        indexed: true,
        internalType: "uint8[]",
        name: "_newData",
        type: "uint8[]",
      },
    ],
    name: "updateTraitEvent",
    type: "event",
  },
  {
    inputs: [],
    name: "ECRegistry",
    outputs: [
      {
        internalType: "contract IECRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "data",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_tokenId",
        type: "uint16",
      },
    ],
    name: "getValue",
    outputs: [
      {
        internalType: "uint8[]",
        name: "",
        type: "uint8[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16[]",
        name: "_tokenIds",
        type: "uint16[]",
      },
      {
        internalType: "uint8[][]",
        name: "_value",
        type: "uint8[][]",
      },
    ],
    name: "setData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_tokenId",
        type: "uint16",
      },
      {
        internalType: "uint8[]",
        name: "_value",
        type: "uint8[]",
      },
    ],
    name: "setValue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "traitId",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "";

export class AccidentalCollaborationMock__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _registry: string,
    _traitId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AccidentalCollaborationMock> {
    return super.deploy(
      _registry,
      _traitId,
      overrides || {}
    ) as Promise<AccidentalCollaborationMock>;
  }
  getDeployTransaction(
    _registry: string,
    _traitId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_registry, _traitId, overrides || {});
  }
  attach(address: string): AccidentalCollaborationMock {
    return super.attach(address) as AccidentalCollaborationMock;
  }
  connect(signer: Signer): AccidentalCollaborationMock__factory {
    return super.connect(signer) as AccidentalCollaborationMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AccidentalCollaborationMockInterface {
    return new utils.Interface(_abi) as AccidentalCollaborationMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AccidentalCollaborationMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as AccidentalCollaborationMock;
  }
}
